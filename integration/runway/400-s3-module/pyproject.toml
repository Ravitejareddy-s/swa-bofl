[tool.poetry]
name = "cloud-common-s3-module"
version = "4.10.0"
description = "SWA Cloud Common Platform S3 Module"
authors = ["Enterprise Cloud <EC-CloudCommonPod-DG@wnco.com>"]
readme = "README.md"
classifiers = [
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.9"


ccp-utils = {version = "*", source = "swa-releases"}
ccplatcfnginlibs = {version = "^5.4.1", source = "swa-releases"}
swa-runway = "^3.6.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"

[tool.poetry.group.lint.dependencies]
black = "^23.12.1"
ruff = "^0.1.13"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-runway = {version = "^1.1.0", source = "swa-releases"}
pytest-sugar = "^0.9.7"

[tool.poetry.dev-dependencies.boto3-stubs]
extras = [
  "s3",
  "s3control",
  "sts",
]
version = "^1.28.50"


[[tool.poetry.source]]
name = "swa-pypi"
priority = "default"
url = "https://nexus-tools.swacorp.com/repository/pypi/simple"

[[tool.poetry.source]]
name = "swa-releases"
priority = "supplemental"
url = "https://nexus-tools.swacorp.com/repository/pypi-releases/simple"


[tool.black]
force-exclude = '''
/(
    \.eggs
  | \.git
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | node_modules
)/
'''
include = '\.pyi?$'
line-length = 88
target-version = ["py39", "py310", "py311"]


[tool.coverage.html]
directory = "reports/test-coverage"

[tool.coverage.report]
exclude_lines = [
  "cov: ignore",  # standard exclude comment
  "if TYPE_CHECKING:",  # excluded blocks
  "if __name__ == .__main__.:",
  "raise AssertionError",  # defensive exceptions
  "raise NotImplementedError",
  "from pathlib import Path",
  "@overload",
]
fail_under = 100
ignore_errors = true
precision = 2
show_missing = true

[tool.coverage.run]
branch = false  # not correctly reported - https://github.com/nedbat/coveragepy/issues/605
data_file = "reports/test-coverage/coverage_data"

[tool.coverage.xml]
output = "reports/test-coverage/coverage-report.xml"


[tool.pyright]
exclude = [
  "**/__pycache__",
  "**/.git",
  "**/.venv",
  "**/docs",
  "**/node_modules",
  "**/runway",
]
pythonPlatform = "All"
pythonVersion = "3.9"
reportDuplicateImport = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "warning"
reportMissingTypeStubs = "none"
reportPrivateUsage = "none"
reportUnknownMemberType = "none"
reportUnnecessaryIsInstance = "warning"
reportUnusedImport = "none"
reportUnusedVariable = "none"
reportWildcardImportFromLibrary = "none"
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
venv = ".venv"


[tool.pytest.ini_options]
addopts = [
  "--cov-config=pyproject.toml"
]
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]


[tool.ruff]  # https://beta.ruff.rs/docs/settings/#top-level
force-exclude = true
ignore = [
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
  "COM812",  # Trailing comma missing
  "D203",  # 1 blank line required before class docstring
  "D213",  # Multi-line docstring summary should start at the second line
  "D215",  # Section underline is over-indented
  "D403",  # First word of the first line should be capitalized
  "D406",  # Section name should end with a newline
  "D407",  # Missing dashed underline after section
  "D408",  # Section underline should be in the line following the section's name
  "D409",  # Section underline should match the length of its name
  "EM",  # flake8-errmsg
  "FBT001",  # Boolean positional arg in function definition
  "FBT002",  # Boolean default value in function definition
  "FBT003",  # Boolean positional value in function call
  "FIX002",  # Line contains TODO
  "PT004",  # Fixture does not return anything, add leading underscore
  "S101",  # Use of `assert` detected
  "S108",  # Probable insecure usage of temporary file or directory
  "S301",  # `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data
  "TD003",  # Missing issue link on the line following this TODO
  "TID252",  # Relative imports from parent modules are banned
]
ignore-init-module-imports = true
line-length = 120
show-fixes = true
select = ["ALL"]
target-version = "py39"  # important to set before applying fixes

[tool.ruff.lint.pyupgrade]  # https://docs.astral.sh/ruff/settings/#pyupgrade-keep-runtime-typing
keep-runtime-typing = true  # TODO (kyle): remove when dropping support for python 3.9

  [tool.ruff.flake8-annotations]  # https://beta.ruff.rs/docs/settings/#flake8-annotations
  allow-star-arg-any = true

  [tool.ruff.pydocstyle]  # https://beta.ruff.rs/docs/settings/#pydocstyle
  convention = "google"

  [tool.ruff.pylint]  # https://beta.ruff.rs/docs/settings/#pylint
  allow-magic-value-types = ["bytes", "int", "str"]
